#BlueJ class context
comment0.target=Installer
comment0.text=\n\ Java\ installer.\ This\ is\ a\ GUI\ for\ unpacking\ an\ application\ (BlueJ\ or\n\ Greenfoot)\ bundled\ inside\ a\ jar\ file.\ A\ properties\ file\ also\ bundled\n\ in\ the\ jar\ file\ controls\ the\ installation.\n\n\ @author\ \ Michael\ Kolling\n\ @author\ \ based\ partly\ on\ code\ by\ Andrew\ Hunt,\ Toolshed\ Technologies\ Inc.\n\n\ This\ program\ is\ free\ software;\ you\ can\ redistribute\ it\ and/or\ modify\n\ it\ under\ the\ terms\ of\ the\ GNU\ General\ Public\ License\ as\ published\ by\n\ the\ Free\ Software\ Foundation;\ either\ version\ 2\ of\ the\ License,\ or\n\ (at\ your\ option)\ any\ later\ version.\n\ \n\ Modified\ by\ Davin\ McCall,\ 2005-09-06,\ and\ 2010-09-24\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=void\ doInstall()
comment10.text=\n\ Install\ button\ action.\ This\ gets\ executed\ on\ a\ seperate\ thread.\n
comment11.params=
comment11.target=void\ readInputValues()
comment11.text=\n\ Read\ the\ values\ that\ the\ user\ selected\ into\ the\ appropriate\ variables.\n
comment12.params=
comment12.target=boolean\ isRaspberryPi()
comment12.text=\n\ Check\ if\ it\ is\ a\ Raspberry\ Pi.\n
comment13.params=path
comment13.target=boolean\ isJDKPath(java.lang.String)
comment13.text=\n\ Check\ that\ the\ current\ Java\ version\ is\ a\ full\ JDK.\ Warn\ if\ not.\n
comment14.params=text
comment14.target=void\ setStatus(java.lang.String)
comment14.text=\n\ Update\ the\ status\ dialog.\ Called\ on\ the\ installer\ thread.\n
comment15.params=
comment15.target=void\ run()
comment16.params=msg1\ msg2
comment16.target=void\ finish(java.lang.String,\ java.lang.String)
comment16.text=\n\ Show\ message\ in\ main\ window\ and\ finish.\n
comment17.params=error\ msg
comment17.target=void\ notifyError(java.lang.String,\ java.lang.String)
comment17.text=\n\ Pop\ up\ a\ dialog\ box\ with\ the\ error\ message.\ After\ an\ error,\n\ installation\ cannot\ proceed.\n
comment18.params=
comment18.target=void\ jdkPathProblem()
comment18.text=\n\ Inform\ user\ of\ invalid\ jdk.\n
comment19.params=dirName\ make
comment19.target=boolean\ checkInstallDir(java.lang.String,\ boolean)
comment19.text=\n\ Inform\ user\ of\ invalid\ install\ dir.\ Return\ true\ if\ everything\ is\ fine.\n
comment2.params=
comment2.target=void\ run()
comment20.params=problem
comment20.target=void\ notifyProblem(java.lang.String)
comment20.text=\n\ Pop\ up\ a\ dialog\ box\ with\ the\ message.\ After\ a\ problem,\n\ installation\ can\ proceed.\n
comment21.params=
comment21.target=void\ run()
comment22.params=
comment22.target=void\ makeWindow()
comment22.text=\n\ Create\ and\ show\ the\ main\ window\n
comment23.params=e
comment23.target=void\ windowClosing(java.awt.event.WindowEvent)
comment24.params=e
comment24.target=void\ windowActivated(java.awt.event.WindowEvent)
comment25.params=isMacOS
comment25.target=void\ writeUnix(boolean)
comment25.text=\n\ Write\ out\ a\ Unix,\ Bourne\ shell\ script\ to\ start\ the\ application\n\ For\ JDK\ 1.4\ and\ later\n
comment26.params=
comment26.target=void\ writeWindows()
comment26.text=\n\ Write\ out\ an\ MSDOS\ style\ batch\ file\ to\ start\ the\ application.\n\ (JDK\ 1.4\ and\ later)\n
comment27.params=
comment27.target=void\ unpackTo()
comment27.text=\n\ Grab\ the\ jar\ data\ from\ the\ class\ file\ and\ unjar\ it\ into\ the\n\ install\ directory.\n
comment28.params=start\ path
comment28.target=void\ makeDirsFor(java.lang.String,\ java.lang.String)
comment28.text=\n\ Recursively\ make\ directories\ needed\ for\ a\ file.\n
comment29.params=dir\ in
comment29.target=void\ dumpJar(java.lang.String,\ java.io.InputStream)
comment29.text=\n\ Extract\ a\ JAR\ from\ a\ file\ stream\ to\ the\ given\ directory\ on\ disk.\n
comment3.params=
comment3.target=Installer()
comment30.params=src\ pattern\ subst
comment30.target=java.lang.String\ replace(java.lang.String,\ char,\ java.lang.String)
comment30.text=\n\ Constructs\ a\ new\ string\ by\ replacing\ the\ character\ in\n\ pattern\ found\ in\ src\ by\ the\ string\ subst\n
comment31.params=title
comment31.target=java.lang.String\ getDirName(java.lang.String)
comment31.text=\n\ Get\ a\ directory\ name\ via\ a\ file\ selection\ dialog.\n
comment32.params=key
comment32.target=java.lang.String\ getProperty(java.lang.String)
comment32.text=\n\ property\ access\n
comment33.params=value
comment33.target=java.awt.Color\ colorFromString(java.lang.String)
comment34.params=value
comment34.target=void\ updateProgress(int)
comment34.text=\n\ Update\ the\ progress\ bar\ with\ a\ percentage\ value.\ This\ is\ called\ from\n\ the\ installation\ thread.\n
comment4.params=
comment4.target=void\ loadProperties()
comment4.text=\n\ Load\ installer\ properties\ -\ name\ of\ the\ archive\ to\ extract,\ the\ logo,\ color\ scheme,\n\ etc.\n
comment5.params=
comment5.target=java.lang.String\ findJavaPath()
comment5.text=\n\ Try\ and\ figure\ out\ the\ path\ to\ the\ currently-running\ JDK\n\ @return\ \ The\ path,\ or\ an\ empty\ string\ if\ could\ not\ be\ determined\n
comment6.params=evt
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.text=\n\ Handle\ button\ press.\n
comment7.params=
comment7.target=void\ doCancel()
comment7.text=\n\ Cancel\ button\ action\n
comment8.params=
comment8.target=void\ getInstallDirectory()
comment8.text=\n\ Get\ an\ installtion\ directory\ from\ the\ user\ via\ a\ file\ selection\n\ dialogue.\n
comment9.params=
comment9.target=void\ getJDKDirectory()
comment9.text=\n\ Get\ the\ jdk\ directory\ from\ the\ user\ via\ a\ file\ selection\n\ dialogue.\n
numComments=35
